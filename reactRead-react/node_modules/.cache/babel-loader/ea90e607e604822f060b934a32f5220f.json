{"ast":null,"code":"var _jsxFileName = \"/Users/GhostKid/Desktop/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Sky from 'react-sky';\nimport Clarifai from 'clarifai';\nimport banana from './Components/Pics/banana.png';\nimport duck from './Components/Pics/duck.png';\nimport star from './Components/Pics/star.png';\nimport mouse from './Components/Pics/mouse.png';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register';\nconst skyParam = {\n  /* FORMAT AS FOLLOWS */\n  0: banana,\n  1: duck,\n  2: star,\n  3: mouse\n};\nconst app = new Clarifai.App({\n  apiKey: 'ee011192827e4a179a9e9c4e48c09e71'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.disPlayBox = boxCor => {\n      this.setState({\n        box: boxCor\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imgUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState({\n              user: {\n                entries: count\n              }\n            });\n          });\n        }\n\n        this.disPlayBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imgUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000').then(response => response.json()).then(console.log);\n  }\n\n  render() {\n    const _this$state = this.state,\n          imgUrl = _this$state.imgUrl,\n          box = _this$state.box,\n          route = _this$state.route,\n          isSignedIn = _this$state.isSignedIn;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Sky, {\n      images: skyParam,\n      how: 150\n      /* Pass the number of images Sky will render chosing randomly */\n      ,\n      time: 20\n      /* time of animation */\n      ,\n      size: '100px'\n      /* size of the rendered images */\n      ,\n      background: 'palettedvioletred'\n      /* color of background */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      imgUrl: imgUrl,\n      box: box,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(SignIn, {\n      onRouteChange: this.onRouteChange,\n      loadUser: this.loadUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      onRouteChange: this.onRouteChange,\n      loadUser: this.loadUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/GhostKid/Desktop/facerecognitionbrain/src/App.js"],"names":["React","Component","Sky","Clarifai","banana","duck","star","mouse","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","SignIn","Register","skyParam","app","App","apiKey","constructor","loadUser","data","setState","user","id","name","email","password","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","disPlayBox","boxCor","box","onInputChange","event","input","target","value","onButtonSubmit","imgUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","catch","err","console","log","onRouteChange","route","isSignedIn","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Sky from 'react-sky';\nimport Clarifai from 'clarifai';\nimport banana from './Components/Pics/banana.png';\nimport duck from './Components/Pics/duck.png';\nimport star from './Components/Pics/star.png';\nimport mouse from './Components/Pics/mouse.png';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register';\n\nconst skyParam={\n    /* FORMAT AS FOLLOWS */\n    0: banana,\n    1: duck,\n    2: star,\n    3: mouse,\n};\n\nconst app = new Clarifai.App({\n  apiKey: 'ee011192827e4a179a9e9c4e48c09e71'\n});\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      input: '',\n      imgUrl: '',\n      box: {},\n      route:'signin',\n      isSignedIn:false,\n      user:{\n        id:'',\n        name:'',\n        email:'',\n        password:'',\n        entries:0,\n        joined:''\n      }\n    }\n  }\n  loadUser=(data)=>{\n    this.setState({user:{\n      id:data.id,\n      name:data.name,\n      email:data.email,\n      password:data.password,\n      entries:data.entries,\n      joined:data.joined\n    }})\n  }\n  componentDidMount(){\n    fetch('http://localhost:3000')\n      .then(response => response.json())\n      .then(console.log)\n  }\n  calculateFaceLocation = (data) => {\n    const clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return{\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n  disPlayBox = (boxCor) => {\n    this.setState({box:boxCor});\n  }\n  onInputChange = (event) => {\n    this.setState({input:event.target.value});\n  }\n  onButtonSubmit = () => {\n    this.setState({imgUrl:this.state.input});\n      app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response => \n        {\n          if(response){\n            fetch('http://localhost:3000/image',{ \n              method:'put',\n              headers:{'Content-Type':'application/json'},\n              body:JSON.stringify({\n              id:this.state.user.id,})\n            })\n            .then(response=>response.json())\n            .then(count=>{\n              this.setState({user:{\n                entries:count\n              }})\n            })\n          }\n          this.disPlayBox(this.calculateFaceLocation(response))\n        })\n      .catch(err => console.log(err));\n  }\n  onRouteChange = (route) => {\n    if(route==='signout'){\n      this.setState({isSignedIn:false})\n    }else if(route==='home'){\n      this.setState({isSignedIn:true})\n    }\n    this.setState({route:route});\n  }\n  render(){\n    const{imgUrl,box,route,isSignedIn} = this.state;\n    return (\n      <div className=\"App\">\n        <Sky\n          images={skyParam}\n          how={150} /* Pass the number of images Sky will render chosing randomly */\n          time={20} /* time of animation */\n          size={'100px'} /* size of the rendered images */\n          background={'palettedvioletred'} /* color of background */\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { route === 'home'\n          ?<div>\n              <Logo />\n              <ImageLinkForm  \n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <FaceRecognition imgUrl={imgUrl} box={box}/>\n            </div>\n          :(\n            route ==='signin'\n            ?<SignIn onRouteChange={this.onRouteChange}loadUser={this.loadUser}/>\n            :<Register onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n            )\n        }\n      </div>\n     );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}