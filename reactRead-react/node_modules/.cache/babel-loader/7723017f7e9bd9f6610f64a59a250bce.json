{"ast":null,"code":"var _jsxFileName = \"/Users/GhostKid/Desktop/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Sky from 'react-sky';\nimport Clarifai from 'clarifai';\nimport banana from './Components/Pics/banana.png';\nimport duck from './Components/Pics/duck.png';\nimport star from './Components/Pics/star.png';\nimport mouse from './Components/Pics/mouse.png';\nimport Navigation from './Components/Navigation/Navigation';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register';\nimport Article from './Components/Article/Article';\nconst skyParam = {\n  /* FORMAT AS FOLLOWS */\n  0: banana,\n  1: duck,\n  2: star,\n  3: mouse\n};\nconst app = new Clarifai.App({\n  apiKey: 'ee011192827e4a179a9e9c4e48c09e71'\n});\nconst initialState = {\n  input: '',\n  route: 'signin',\n  isSignedIn: false,\n  reading: '',\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.disPlayBox = boxCor => {\n      this.setState({\n        box: boxCor\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imgUrl: this.state.input\n      });\n      this.setState({\n        reading: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.disPlayBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        }, this.setState({\n          reading: ''\n        }));\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000').then(response => response.json()).then(console.log);\n  }\n\n  render() {\n    const _this$state = this.state,\n          route = _this$state.route,\n          isSignedIn = _this$state.isSignedIn,\n          reading = _this$state.reading;\n\n    if (reading === '') {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Sky, {\n        images: skyParam,\n        how: 150\n        /* Pass the number of images Sky will render chosing randomly */\n        ,\n        time: 20\n        /* time of animation */\n        ,\n        size: '100px'\n        /* size of the rendered images */\n        ,\n        background: 'palettedvioletred'\n        /* color of background */\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), route === 'home' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        name: this.state.user.name,\n        entries: this.state.user.entries,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })) : route === 'signin' ? React.createElement(SignIn, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }) : React.createElement(Register, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Article, {\n        reading: reading,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/GhostKid/Desktop/facerecognitionbrain/src/App.js"],"names":["React","Component","Sky","Clarifai","banana","duck","star","mouse","Navigation","ImageLinkForm","Rank","SignIn","Register","Article","skyParam","app","App","apiKey","initialState","input","route","isSignedIn","reading","user","id","name","email","password","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","disPlayBox","boxCor","box","onInputChange","event","target","value","onButtonSubmit","imgUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","console","log","onRouteChange","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Sky from 'react-sky';\nimport Clarifai from 'clarifai';\nimport banana from './Components/Pics/banana.png';\nimport duck from './Components/Pics/duck.png';\nimport star from './Components/Pics/star.png';\nimport mouse from './Components/Pics/mouse.png';\nimport Navigation from './Components/Navigation/Navigation';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register';\nimport Article from './Components/Article/Article';\n\nconst skyParam={\n    /* FORMAT AS FOLLOWS */\n    0: banana,\n    1: duck,\n    2: star,\n    3: mouse,\n};\n\nconst app = new Clarifai.App({\n  apiKey: 'ee011192827e4a179a9e9c4e48c09e71'\n});\nconst initialState = {\n  input: '',\n  route:'signin',\n  isSignedIn:false,\n  reading:'',\n  user:{\n    id:'',\n    name:'',\n    email:'',\n    password:'',\n    entries:0,\n    joined:''\n  }\n}\nclass App extends Component {\n  constructor(){\n    super();\n    this.state=initialState;\n  }\n  loadUser=(data)=>{\n    this.setState({user:{\n      id:data.id,\n      name:data.name,\n      email:data.email,\n      entries:data.entries,\n      joined:data.joined\n    }})\n  }\n  componentDidMount(){\n    fetch('http://localhost:3000')\n      .then(response => response.json())\n      .then(console.log)\n  }\n  calculateFaceLocation = (data) => {\n    const clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return{\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n  disPlayBox = (boxCor) => {\n    this.setState({box:boxCor});\n  }\n  onInputChange = (event) => {\n    this.setState({input:event.target.value});\n  }\n  onButtonSubmit = () => {\n    this.setState({imgUrl:this.state.input});\n    this.setState({reading:this.state.input})\n      app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response => \n        {\n          if(response){\n            fetch('http://localhost:3000/image',{ \n              method:'put',\n              headers:{'Content-Type':'application/json'},\n              body:JSON.stringify({\n              id:this.state.user.id,})\n            })\n            .then(response=>response.json())\n            .then(count=>{\n              this.setState(Object.assign(this.state.user,{\n                entries:count})\n              )\n            })\n          }\n          this.disPlayBox(this.calculateFaceLocation(response))\n        })\n      .catch(err => console.log(err));\n  }\n  onRouteChange = (route) => {\n    if(route==='signout'){\n      this.setState(initialState)\n    }else if(route==='home'){\n      this.setState({isSignedIn:true},\n      this.setState({reading:''})\n        )\n    }\n    this.setState({route:route});\n  }\n  render(){\n    const{route,isSignedIn,reading} = this.state;\n    if(reading===''){\n    return (\n      <div className=\"App\">\n        <Sky\n          images={skyParam}\n          how={150} /* Pass the number of images Sky will render chosing randomly */\n          time={20} /* time of animation */\n          size={'100px'} /* size of the rendered images */\n          background={'palettedvioletred'} /* color of background */\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { route === 'home'\n          ?\n            <div>\n              <ImageLinkForm  \n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n            </div>\n          :(\n            route ==='signin'\n            ?<SignIn onRouteChange={this.onRouteChange}loadUser={this.loadUser}/>\n            :<Register onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n            )\n        }\n      </div>\n     );}\n     else{\n       return(\n          <div>\n            <Article reading={reading} onRouteChange={this.onRouteChange}/>\n          </div>\n         \n         )\n     }\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}