{"ast":null,"code":"var _jsxFileName = \"/Users/GhostKid/Desktop/facerecognitionbrain/src/Components/Profile/Profile.js\";\nimport React, { Component } from 'react';\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const _this$props = this.props,\n          id = _this$props.id,\n          array = _this$props.array;\n\n    if (array) {\n      const words = array.map(word => {\n        return React.createElement(\"div\", {\n          className: \"col-lg-4\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, word);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, words);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"You don't have anything in vocabulary yet\");\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/GhostKid/Desktop/facerecognitionbrain/src/Components/Profile/Profile.js"],"names":["React","Component","Profile","constructor","props","render","id","array","words","map","word","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC5BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AACDC,EAAAA,MAAM,GAAG;AAAA,wBACY,KAAKD,KADjB;AAAA,UACEE,EADF,eACEA,EADF;AAAA,UACKC,KADL,eACKA,KADL;;AAEL,QAAIA,KAAJ,EAAW;AACT,YAAMC,KAAK,GAAGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAG;AAC7B,eACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAA0B,UAAA,GAAG,EAAEC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,IADH,CADF;AAKD,OANa,CAAd;AAOA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMF,KAAN,CAAP;AACD;;AAED,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAP;AACD;;AAlByB;;AAsBhC,eAAeN,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Profile extends Component {\n    constructor(props){\n        super(props);\n    }\n    render() {\n        const {id,array}=this.props;\n        if (array) {\n          const words = array.map(word=> {\n            return (\n              <div className='col-lg-4' key={index}>\n                {word}\n              </div>\n            )\n          })  \n          return <div>{words}</div>\n        }\n      \n        return <div>You don't have anything in vocabulary yet</div>\n      }\n\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}