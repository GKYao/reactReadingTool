{"ast":null,"code":"var _jsxFileName = \"/Users/GhostKid/Desktop/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Sky from 'react-sky';\nimport Clarifai from 'clarifai';\nimport banana from './Components/Pics/banana.png';\nimport duck from './Components/Pics/duck.png';\nimport star from './Components/Pics/star.png';\nimport mouse from './Components/Pics/mouse.png';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport SignIn from './Components/SignIn/SignIn';\nconst skyParam = {\n  /* FORMAT AS FOLLOWS */\n  0: banana,\n  1: duck,\n  2: star,\n  3: mouse\n};\nconst app = new Clarifai.App({\n  apiKey: 'ee011192827e4a179a9e9c4e48c09e71'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.disPlayBox = boxCor => {\n      this.setState({\n        box: boxCor\n      });\n      console.log(this.state.box);\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imgUrl: this.state.input\n      });\n      console.log('check ' + this.state.input);\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.disPlayBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imgUrl: '',\n      box: {},\n      route: 'signin'\n    };\n  }\n\n  render() {\n    const imgUrl = this.state.imgUrl;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Sky, {\n      images: skyParam,\n      how: 150\n      /* Pass the number of images Sky will render chosing randomly */\n      ,\n      time: 20\n      /* time of animation */\n      ,\n      size: '100px'\n      /* size of the rendered images */\n      ,\n      background: 'palettedvioletred'\n      /* color of background */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), this.state.route === 'signin' ? React.createElement(SignIn, {\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      imgUrl: imgUrl,\n      box: this.state.box,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/GhostKid/Desktop/facerecognitionbrain/src/App.js"],"names":["React","Component","Sky","Clarifai","banana","duck","star","mouse","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","SignIn","skyParam","app","App","apiKey","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","disPlayBox","boxCor","setState","box","console","log","state","onInputChange","event","input","target","value","onButtonSubmit","imgUrl","models","predict","FACE_DETECT_MODEL","then","response","catch","err","onRouteChange","route","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Sky from 'react-sky';\nimport Clarifai from 'clarifai';\nimport banana from './Components/Pics/banana.png';\nimport duck from './Components/Pics/duck.png';\nimport star from './Components/Pics/star.png';\nimport mouse from './Components/Pics/mouse.png';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport SignIn from './Components/SignIn/SignIn';\n\nconst skyParam={\n    /* FORMAT AS FOLLOWS */\n    0: banana,\n    1: duck,\n    2: star,\n    3: mouse,\n};\n\nconst app = new Clarifai.App({\n  apiKey: 'ee011192827e4a179a9e9c4e48c09e71'\n});\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      input: '',\n      imgUrl: '',\n      box: {},\n      route:'signin',\n    }\n  }\n  calculateFaceLocation = (data) => {\n    const clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return{\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n  disPlayBox = (boxCor) => {\n    this.setState({box:boxCor});\n    console.log(this.state.box);\n  }\n  onInputChange = (event) => {\n    this.setState({input:event.target.value});\n  }\n  onButtonSubmit = () => {\n    this.setState({imgUrl:this.state.input});\n    console.log('check '+this.state.input);\n      app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response => this.disPlayBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log(err));\n  }\n  onRouteChange = (route) => {\n    this.setState({route:route});\n  }\n  render(){\n    const {imgUrl}=this.state;\n    return (\n      <div className=\"App\">\n        <Sky\n          images={skyParam}\n          how={150} /* Pass the number of images Sky will render chosing randomly */\n          time={20} /* time of animation */\n          size={'100px'} /* size of the rendered images */\n          background={'palettedvioletred'} /* color of background */\n        />\n        <Navigation onRouteChange={this.onRouteChange}/>\n        { this.state.route === 'signin'\n          ?<SignIn onRouteChange={this.onRouteChange}/>\n          :\n          <div>\n            <Logo />\n            <ImageLinkForm  \n            onInputChange={this.onInputChange}\n            onButtonSubmit={this.onButtonSubmit}\n            />\n            <Rank />\n            <FaceRecognition imgUrl={imgUrl} box={this.state.box}/>\n          </div>\n        }\n      </div>\n     );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}