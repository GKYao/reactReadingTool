{"ast":null,"code":"var _jsxFileName = \"/Users/GhostKid/Desktop/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Sky from 'react-sky'; // import Clarifai from 'clarifai';\n\nimport banana from './Components/Pics/banana.png';\nimport duck from './Components/Pics/duck.png';\nimport star from './Components/Pics/star.png';\nimport mouse from './Components/Pics/mouse.png';\nimport Navigation from './Components/Navigation/Navigation';\nimport ArticleBox from './Components/ArticleBox/ArticleBox';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register';\nimport Article from './Components/Article/Article';\nimport Profile from './Components/Profile/Profile';\nconst skyParam = {\n  0: banana,\n  1: duck,\n  2: star,\n  3: mouse\n}; // const app = new Clarifai.App({\n//   apiKey: 'ee011192827e4a179a9e9c4e48c09e71'\n// });\n\nconst initialState = {\n  input: '',\n  route: 'signin',\n  isSignedIn: false,\n  reading: '',\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    entries: 0,\n    joined: '',\n    vocab: []\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined,\n          vocab: data.vocab\n        }\n      });\n    };\n\n    this.loadVocab = vocab => {\n      this.setState({\n        user: {\n          vocab: vocab\n        }\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      // this.setState({imgUrl:this.state.input});\n      this.setState({\n        reading: this.state.input\n      }); //   app.models\n      //   .predict(\n      //     Clarifai.FACE_DETECT_MODEL,\n      //     this.state.input)\n      // .then(response => \n      //   {\n      //     if(response){\n\n      fetch('http://localhost:3000/image', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.state.user.id\n        })\n      }).then(response => response.json()).then(count => {\n        this.setState(Object.assign(this.state.user, {\n          entries: count\n        }));\n      }) // }\n      // this.disPlayBox(this.calculateFaceLocation(response))\n      // }\n      // )\n      .catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        }, this.setState({\n          reading: ''\n        }));\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000').then(response => response.json()).then(console.log);\n  } // calculateFaceLocation = (data) => {\n  //   const clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box;\n  //   const image = document.getElementById('inputimage');\n  //   const width = Number(image.width);\n  //   const height = Number(image.height);\n  //   return{\n  //     leftCol: clarifaiFace.left_col * width,\n  //     topRow: clarifaiFace.top_row * height,\n  //     rightCol: width - (clarifaiFace.right_col * width),\n  //     bottomRow: height - (clarifaiFace.bottom_row * height)\n  //   }\n  // }\n  // disPlayBox = (boxCor) => {\n  //   this.setState({box:boxCor});\n  // }\n\n\n  render() {\n    const _this$state = this.state,\n          route = _this$state.route,\n          isSignedIn = _this$state.isSignedIn,\n          reading = _this$state.reading;\n\n    if (route === 'profile') {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(Profile, {\n        name: this.state.user.name,\n        array: this.state.user.vocab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }));\n    }\n\n    if (reading === '') {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Sky, {\n        images: skyParam,\n        how: 150\n        /* Pass the number of images Sky will render chosing randomly */\n        ,\n        time: 20\n        /* time of animation */\n        ,\n        size: '100px'\n        /* size of the rendered images */\n        ,\n        background: 'palettedvioletred'\n        /* color of background */\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), route === 'home' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(ArticleBox, {\n        loadUser: this.loadUser,\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        email: this.state.user.email,\n        password: this.state.user.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })) : route === 'signin' ? React.createElement(SignIn, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }) : React.createElement(Register, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Article, {\n        reading: reading,\n        onRouteChange: this.onRouteChange,\n        id: this.state.user.id,\n        loadVocab: this.loadVocab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/GhostKid/Desktop/facerecognitionbrain/src/App.js"],"names":["React","Component","Sky","banana","duck","star","mouse","Navigation","ArticleBox","SignIn","Register","Article","Profile","skyParam","initialState","input","route","isSignedIn","reading","user","id","name","email","password","entries","joined","vocab","App","constructor","loadUser","data","setState","loadVocab","onInputChange","event","target","value","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","err","console","log","onRouteChange","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Sky from 'react-sky';\n// import Clarifai from 'clarifai';\nimport banana from './Components/Pics/banana.png';\nimport duck from './Components/Pics/duck.png';\nimport star from './Components/Pics/star.png';\nimport mouse from './Components/Pics/mouse.png';\nimport Navigation from './Components/Navigation/Navigation';\nimport ArticleBox from './Components/ArticleBox/ArticleBox';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register';\nimport Article from './Components/Article/Article';\nimport Profile from './Components/Profile/Profile';\n\nconst skyParam={\n    0: banana,\n    1: duck,\n    2: star,\n    3: mouse,\n};\n\n// const app = new Clarifai.App({\n//   apiKey: 'ee011192827e4a179a9e9c4e48c09e71'\n// });\nconst initialState = {\n  input: '',\n  route:'signin',\n  isSignedIn:false,\n  reading:'',\n  user:{\n    id:'',\n    name:'',\n    email:'',\n    password:'',\n    entries:0,\n    joined:'',\n    vocab:[]\n  }\n}\nclass App extends Component {\n  constructor(){\n    super();\n    this.state=initialState;\n  }\n  loadUser=(data)=>{\n    this.setState({user:{\n      id:data.id,\n      name:data.name,\n      email:data.email,\n      entries:data.entries,\n      joined:data.joined,\n      vocab:data.vocab\n    }})\n  }\n  loadVocab=(vocab)=>{\n    this.setState({user:{\n      vocab:vocab\n    }})\n  }\n  componentDidMount(){\n    fetch('http://localhost:3000')\n      .then(response => response.json())\n      .then(console.log)\n  }\n  // calculateFaceLocation = (data) => {\n  //   const clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box;\n  //   const image = document.getElementById('inputimage');\n  //   const width = Number(image.width);\n  //   const height = Number(image.height);\n  //   return{\n  //     leftCol: clarifaiFace.left_col * width,\n  //     topRow: clarifaiFace.top_row * height,\n  //     rightCol: width - (clarifaiFace.right_col * width),\n  //     bottomRow: height - (clarifaiFace.bottom_row * height)\n  //   }\n  // }\n  // disPlayBox = (boxCor) => {\n  //   this.setState({box:boxCor});\n  // }\n  onInputChange = (event) => {\n    this.setState({input:event.target.value});\n  }\n  onButtonSubmit = () => {\n    // this.setState({imgUrl:this.state.input});\n    this.setState({reading:this.state.input})\n    //   app.models\n    //   .predict(\n    //     Clarifai.FACE_DETECT_MODEL,\n    //     this.state.input)\n      // .then(response => \n      //   {\n      //     if(response){\n            fetch('http://localhost:3000/image',{ \n              method:'put',\n              headers:{'Content-Type':'application/json'},\n              body:JSON.stringify({\n              id:this.state.user.id,})\n            })\n            .then(response=>response.json())\n            .then(count=>{\n              this.setState(Object.assign(this.state.user,{\n                entries:count})\n              )\n            })\n          // }\n          // this.disPlayBox(this.calculateFaceLocation(response))\n        // }\n        // )\n      .catch(err => console.log(err));\n  }\n  onRouteChange = (route) => {\n    if(route==='signout'){\n      this.setState(initialState)\n    }else if(route==='home'){\n      this.setState({isSignedIn:true},\n      this.setState({reading:''})\n        )\n    }\n    this.setState({route:route});\n  }\n  render(){\n    const{route,isSignedIn,reading} = this.state;\n    if(route==='profile'){\n      return(    \n      <div className=\"App\">\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        <Profile name={this.state.user.name} array={this.state.user.vocab}/>\n      </div> \n      );\n    }\n    if(reading===''){\n    return (\n      <div className=\"App\">\n        <Sky\n          images={skyParam}\n          how={150} /* Pass the number of images Sky will render chosing randomly */\n          time={20} /* time of animation */\n          size={'100px'} /* size of the rendered images */\n          background={'palettedvioletred'} /* color of background */\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { route === 'home'\n          ?\n            <div>\n              <ArticleBox  \n                loadUser={this.loadUser}\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n                email={this.state.user.email}\n                password={this.state.user.password}\n              />\n              {/* <Rank name={this.state.user.name} entries={this.state.user.entries}/> */}\n            </div>\n          :(\n            route ==='signin'\n            ?<SignIn onRouteChange={this.onRouteChange}loadUser={this.loadUser}/>\n            :<Register onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n            )\n        }\n      </div>\n     );}\n     else{\n       return(\n          <div>\n            <Article reading={reading} onRouteChange={this.onRouteChange} id={this.state.user.id} loadVocab={this.loadVocab}/>\n          </div>\n         )\n     }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}