{"ast":null,"code":"var _jsxFileName = \"/Users/GhostKid/Desktop/ReactReadingApp/reactReadingTool/reactRead-react/src/Components/Article/Article.js\";\nimport React from 'react';\nimport './Article.css';\n\nclass Article extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.translate = data => {\n      this.setState({\n        loadingText: 'Loading'\n      });\n      fetch('http://localhost:3000/translate', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          word: data\n        })\n      }).then(response => response.json()).then(translation => {\n        if (translation) {\n          this.setState({\n            translation: translation\n          });\n          this.setState({\n            loadingText: ''\n          });\n        }\n      });\n    };\n\n    this.addVocab = (data, id) => {\n      this.setState({\n        loadingText: 'Loading'\n      });\n      fetch('http://localhost:3000/vocab/insert', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id,\n          word: data\n        })\n      }).then(response => response.json());\n      this.onSubmitSave();\n    };\n\n    this.onSubmitSave = () => {\n      fetch('http://localhost:3000/vocab/read', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.props.id\n        })\n      }).then(response => response.json()).then(data => {\n        this.props.loadVocab(data[0].vocab);\n      });\n    };\n\n    this.getSelectionText = () => {\n      if (window.getSelection) {\n        this.setState({\n          text: window.getSelection().toString()\n        });\n        this.setState({\n          translation: ''\n        });\n        this.translate(window.getSelection().toString());\n        this.setState({\n          display: 'block'\n        });\n\n        if (window.getSelection().toString() === '') {\n          this.setState({\n            display: 'none'\n          });\n        }\n      } else if (document.selection && document.selection.type !== \"Control\") {\n        this.translate(document.selection.createRange().text);\n        this.setState({\n          text: window.getSelection().toString()\n        });\n      } else {\n        this.setState({\n          translation: ''\n        });\n      }\n    };\n\n    this.state = {\n      loadingText: 'Loading',\n      translation: '',\n      text: '',\n      x: 0,\n      y: 0,\n      display: 'none',\n      email: props.email,\n      password: props.password\n    };\n  }\n\n  _onMouseUp(e) {\n    this.setState({\n      x: e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft,\n      y: e.clientY + document.body.scrollTop + document.documentElement.scrollTop\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          onRouteChange = _this$props.onRouteChange,\n          reading = _this$props.reading,\n          id = _this$props.id;\n    const _this$state = this.state,\n          x = _this$state.x,\n          y = _this$state.y,\n          text = _this$state.text,\n          display = _this$state.display,\n          loadingText = _this$state.loadingText,\n          translation = _this$state.translation;\n    return React.createElement(\"div\", {\n      className: \"center\",\n      onClick: this.getSelectionText,\n      onMouseUp: this._onMouseUp.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"br white fw6 f4 lh-copy measure \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, reading, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"w-30 grow f4 link ph3 pv2 dib white bg-light-red\",\n      onClick: () => onRouteChange('home'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Back\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"infoDiv\",\n      className: \"tooltipDiv\",\n      style: {\n        display: display,\n        left: x,\n        top: y\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, loadingText, translation, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"w-40 grow f4 link ph3 pv2 dib white bg-light-blue\",\n      onClick: () => this.addVocab(text, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}\n\nexport default Article;","map":{"version":3,"sources":["/Users/GhostKid/Desktop/ReactReadingApp/reactReadingTool/reactRead-react/src/Components/Article/Article.js"],"names":["React","Article","Component","constructor","props","translate","data","setState","loadingText","fetch","method","headers","body","JSON","stringify","word","then","response","json","translation","addVocab","id","onSubmitSave","loadVocab","vocab","getSelectionText","window","getSelection","text","toString","display","document","selection","type","createRange","state","x","y","email","password","_onMouseUp","e","clientX","scrollLeft","documentElement","clientY","scrollTop","render","onRouteChange","reading","bind","left","top"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Article.css';\nclass Article extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            loadingText:'Loading',\n            translation:'',\n            text:'', \n            x: 0, \n            y: 0,\n            display:'none',\n            email:props.email,\n            password:props.password\n        }\n    }\n    _onMouseUp(e) {\n        this.setState({ \n            x: e.clientX + document.body.scrollLeft\n            + document.documentElement.scrollLeft, \n            y: e.clientY + document.body.scrollTop\n            + document.documentElement.scrollTop });\n      }\n    translate=(data)=>{\n        this.setState({loadingText:'Loading'});\n        fetch('http://localhost:3000/translate',{\n            method:'post',\n            headers:{'Content-Type':'application/json'},\n            body:JSON.stringify({\n                word:data\n            })\n        })\n        .then(response => response.json())\n        .then(translation => {\n          if(translation){\n            this.setState({translation:translation})\n            this.setState({loadingText:''})\n          }\n        })\n    }\n  \n    addVocab=(data,id)=>{\n        this.setState({loadingText:'Loading'});\n        fetch('http://localhost:3000/vocab/insert',{\n            method:'put',\n            headers:{'Content-Type':'application/json'},\n            body:JSON.stringify({\n                id:id,\n                word:data\n            })\n        })\n        .then(response => response.json())\n        this.onSubmitSave();\n    }\n    onSubmitSave=()=>{\n        fetch('http://localhost:3000/vocab/read',{\n            method:'post',\n            headers:{'Content-Type':'application/json'},\n            body:JSON.stringify({\n                id:this.props.id\n            })\n        })\n        .then(response => response.json())\n        .then(data => {\n            this.props.loadVocab(data[0].vocab);\n        })\n    }\n    getSelectionText=()=> {\n        if (window.getSelection) {\n            this.setState({text:window.getSelection().toString()});\n            this.setState({translation:''});\n            this.translate(window.getSelection().toString());\n            this.setState({display:'block'});\n            if(window.getSelection().toString()==='')\n            {this.setState({display:'none'});}\n        } else if (document.selection && document.selection.type !== \"Control\"){\n            this.translate(document.selection.createRange().text);\n            this.setState({text:window.getSelection().toString()});\n        }else{\n            this.setState({translation:''});\n        }\n    }\n    render(){\n    const{onRouteChange,reading,id}=this.props;\n    const{x,y,text,display,loadingText,translation}=this.state;\n    return(\n        <div className=\"center\"  onClick={this.getSelectionText} onMouseUp={this._onMouseUp.bind(this)}>\n            <p className=\"br white fw6 f4 lh-copy measure \">\n                {reading}\n                <br/>\n                <button \n                    className='w-30 grow f4 link ph3 pv2 dib white bg-light-red' \n                    onClick={()=>onRouteChange('home')}\n                    >Back</button>\n            </p>\n            <br/>\n            <div \n            id=\"infoDiv\" \n            className=\"tooltipDiv\" \n            style={{display:display,left:x,top:y}}>\n            {loadingText}{translation}<br/>\n                <button \n                    className='w-40 grow f4 link ph3 pv2 dib white bg-light-blue' \n                    onClick={()=>this.addVocab(text,id)}\n                    >Save\n                </button>\n            \n            </div>\n        </div>  \n    );\n}\n}\n\nexport default Article;"]},"metadata":{},"sourceType":"module"}